DROP TABLE TEAMS;
CREATE TABLE TEAMS(
  TEAM_ID INTEGER,
  TEAM_NAME VARCHAR(255),
  TEAM_COUNTRY VARCHAR(255),
  CONSTRAINT TEAMS_PK PRIMARY KEY(TEAM_ID)
);
  
DROP TABLE MATCHES;
CREATE TABLE MATCHES(	
  MATCHID NUMBER(16,0) NOT NULL ENABLE, 
	TEAMA_ID NUMBER(16,0), 
	TEAMB_ID NUMBER(16,0), 
	GOAL_A NUMBER(4,0), 
	GOAL_B NUMBER(4,0), 
	COMPETITION VARCHAR2(255 BYTE),
  CONSTRAINT TEAMSA_FK FOREIGN KEY ( TEAMA_ID) REFERENCES TEAMS(TEAM_ID),
  CONSTRAINT TEAMSB_FK FOREIGN KEY ( TEAMB_ID) REFERENCES TEAMS(TEAM_ID),
  CONSTRAINT MATCHES_PK PRIMARY KEY (MATCHID)
  );
   
  
INSERT INTO TEAMS VALUES(1, 'ARSENAL', 'ENGLAND');
INSERT INTO TEAMS VALUES(2, 'MANCHESTER UNITED', 'ENGLAND');
INSERT INTO TEAMS VALUES(3, 'CHELSEA', 'ENGLAND');
INSERT INTO TEAMS VALUES(4, 'MANCHESTER CITY', 'ENGLAND');
INSERT INTO TEAMS VALUES(5, 'BARCELLONA', 'SPAIN');
INSERT INTO TEAMS VALUES(6, 'REAL MADRID', 'SPAIN');
INSERT INTO TEAMS VALUES(7, 'GETAFE', 'SPAIN');
INSERT INTO TEAMS VALUES(8, 'SEVILLA', 'SPAIN');
INSERT INTO TEAMS VALUES(9, 'PORTSMOUTH', 'ENGLAND');


--a) Using a trigger, create a table that logs the timestamps of all the insertion in the table Teams
DROP TABLE TEAMS_LOG;
CREATE TABLE TEAMS_LOG (
  USER_LOG VARCHAR2(100),
  DATE_LOG DATE
);

SELECT * FROM TEAMS_LOG;

CREATE OR REPLACE TRIGGER TEAMS_AI 
AFTER INSERT ON TEAMS 
BEGIN
  INSERT INTO TEAMS_LOG (USER_LOG, DATE_LOG) VALUES ( USER, SYSDATE); 
END;

--b) Competition is either Champions League, Europa Leauge, Premier League or La Liga .
CREATE OR REPLACE TRIGGER MATCHES_COMP_BI 
BEFORE INSERT OR UPDATE ON MATCHES
FOR EACH ROW
BEGIN
  IF UPPER(:NEW.COMPETITION) != 'CHAMPIONS LEAGUE' OR UPPER(:NEW.COMPETITION) != 'EUROPA LEAGUE'
    OR UPPER(:NEW.COMPETITION) != 'PREMIER LEAGUE' OR UPPER(:NEW.COMPETITION) != 'LA LIGA' THEN
    raise_application_error( -20001, 'Incorrect Competition Entry.');
  END IF;
END;

--c) Country is either Spain or England
CREATE OR REPLACE TRIGGER TEAMS_COUNTRY_BI 
BEFORE INSERT OR UPDATE ON TEAMS
FOR EACH ROW
BEGIN
  IF UPPER(:NEW.TEAM_COUNTRY) != 'ENGLAND' OR UPPER(:NEW.TEAM_COUNTRY) != 'SPAIN' THEN
    raise_application_error( -20002, 'Incorrect Country Entry.');
  END IF;
END;

--d) Number of Goals is >=0
CREATE OR REPLACE TRIGGER MATCHES_GOALS_BI 
BEFORE INSERT OR UPDATE ON MATCHES
FOR EACH ROW
BEGIN
  IF SUM(:NEW.GOAL_A + :NEW.GOAL_A) <= 0 THEN
    raise_application_error( -20002, 'Incorrect Country Entry.');
  END IF;
END;

--e) Using a trigger, check that, if Premier League or La Liga is selected, 
--  the country of the two teams is correct (both England for Premier League and both Spain for La Liga).
CREATE OR REPLACE TRIGGER MATCHES_COMPETITION_BI 
BEFORE INSERT OR UPDATE ON MATCHES
  FOR EACH ROW
DECLARE
   TEAMA_COUNTRY VARCHAR(255);
   TEAMB_COUNTRY VARCHAR(255);
BEGIN
  SELECT TEAM_COUNTRY INTO TEAMA_COUNTRY FROM TEAMS WHERE TEAM_ID = :NEW.TEAMA_ID;
  SELECT TEAM_COUNTRY INTO TEAMB_COUNTRY FROM TEAMS WHERE TEAM_ID = :NEW.TEAMB_ID;
  
  IF UPPER(:NEW.COMPETITION) = 'PREMIER LEAGUE' AND (TEAMA_COUNTRY != 'ENGLAND' AND TEAMB_COUNTRY != 'ENGLAND') THEN
        raise_application_error( -20004, 'PREMIER LEAGUE can only be played with both teams from England');
  ELSIF UPPER(:NEW.COMPETITION) = 'LA RIGA' AND ( TEAMA_COUNTRY != 'SPAIN' AND TEAMB_COUNTRY != 'SPAIN' ) THEN
        raise_application_error( -20004, 'LA RIGA can only be played with both teams from Spain');
  END IF;
END;

--f) Using a trigger, check that a team has no more than 3 home matches in the table matches.
CREATE OR REPLACE TRIGGER MATCHES_HOME_BI 
BEFORE INSERT OR UPDATE ON MATCHES
  FOR EACH ROW
DECLARE
   V_TOTAL INTEGER;
BEGIN
  SELECT COUNT(TEAMA_ID) INTO V_TOTAL FROM MATCHES WHERE TEAMA_ID = :NEW.TEAMA_ID;
  IF V_TOTAL > 3 THEN
    raise_application_error( -20003, 'Your team has played more than 3 times in home match.');
  END IF;
END;